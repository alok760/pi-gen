# Note:
# The Raspberry Pi machine need to be setup SSH to upload image to some server.
# For example, create /var/lib/buildkite-agent/.ssh/config with this content:
#    Host img-storage
#        User <remote_user>
#        Hostname <server_ip>

# Set environment variable $FULL_BUILD to build from stage0.

steps:
  - label: "Config :spiral_note_pad: and run :building_construction: build.sh"
    commands:
      # Install prerequisite tools
      - sudo apt-get install quilt parted realpath qemu-user-static debootstrap zerofree pxz pixz dosfstools bsdtar libcap2-bin grep rsync xz-utils file git curl
      # Add config
      - echo "IMG_NAME='SUSIbian'" > config
      - echo -e "\nAPT_PROXY=http://localhost:3142" >> config
      - echo -e "\nWORK_DIR=$(realpath $PWD/../Work)" >> config
      - echo -e "\nDEPLOY_DIR=$(realpath $PWD/../Deploy)" >> config
      # SUSI_REVISION is passed from parent Pipeline
      - echo -e "\nSUSI_REVISION=$SUSI_REVISION" >> config
      # Tell pi-gen to skip the phases which are to build desktop image
      - touch ./stage3/SKIP ./stage4/SKIP
      - touch ./stage2/SKIP_IMAGES ./stage4/SKIP_IMAGES
      # Delete old builds
      - sudo rm -rf "$(realpath "$PWD"/../Work/stage2.5)"
      - sudo rm -rf "$(realpath "$PWD"/../Work/export-image)"
      - sudo rm -rf "$(realpath "$PWD"/../Deploy)"
      # If $FULL_BUILD is not set and the Work/stage2/rootfs folder exists, we do incremental build, based on Raspbian Lite (stage2).
      - if [ -z "$FULL_BUILD" ] && [ -d "$(realpath "$PWD"/../Work/stage2/rootfs)" ]; then touch ./stage0/SKIP ./stage1/SKIP ./stage2/SKIP; else sudo rm -rf "$(realpath "$PWD"/../Work)"; fi
      - if [ -z "$FULL_BUILD" ] && [ -d "$(realpath "$PWD"/../Work/stage2/rootfs)" ]; then sudo CLEAN=1 ./build.sh; else sudo ./build.sh; fi
  - wait
  - label: "Upload :truck: image file"
    commands:
      - ./.buildkite/upload_image.sh "img-storage"
