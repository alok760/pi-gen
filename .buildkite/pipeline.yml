# Note:
# The Raspberry Pi machine need to setup SSH for the server to upload image.
steps:
  - label: Upload image file
    commands:
      - ssh img-storage "mkdir /tmp/$BUILDKITE_ORGANIZATION_SLUG || true"
      - scp "$(realpath $PWD/../Deploy)/$(date +%Y-%m-%d)-SUSIbian-lite-plus.img.xz" img-storage:/tmp/$BUILDKITE_ORGANIZATION_SLUG/
      - ssh img-storage "mv /tmp/$BUILDKITE_ORGANIZATION_SLUG/$(date +%Y-%m-%d)-SUSIbian-lite-plus.img.xz ~/Softwares/SUSI.AI-Image/"
  - wait
  - label: Add config and run build.sh
    commands:
      - echo "IMG_NAME='SUSIbian'" > config
      - touch ./stage3/SKIP ./stage4/SKIP
      - touch ./stage2/SKIP_IMAGES ./stage4/SKIP_IMAGES
      - echo -e "\nAPT_PROXY=http://localhost:3142" >> config
      - echo -e "\nWORK_DIR=$(realpath $PWD/../Work)" >> config
      - echo -e "\nDEPLOY_DIR=$(realpath $PWD/../Deploy)" >> config
      - sudo rm -rf "$(realpath $PWD/../Work/stage2.5)"
      - sudo rm -rf "$(realpath $PWD/../Work/export-image)"
      - sudo rm -rf "$(realpath $PWD/../Deploy)"
      - if [ "$CONTINUE" ]; then touch ./stage0/SKIP ./stage1/SKIP ./stage2/SKIP; else sudo rm -rf $(realpath $PWD/../Work); fi
      - if [ "$CONTINUE" ]; then sudo CLEAN=1 ./build.sh; else sudo ./build.sh; fi
